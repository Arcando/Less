-git add +Название файла с расширением - переводит файл/все файлы в статус "подготовленный" для commited
{-git commit -m "Massage" - переводит файл/все файлы в статус "Зафиксированный"
-git commit -a -m "Massage" - о же смое, что и git add + git commit -m "Massage", но позволяет выполнить всё это за одну команду(используется только для "MODIFIED" файлов).
-git commit -amend -m "Massage" - дополняет последний коммит, добавляя в него "свежие" изменения. Так же можно изменить сообщение для коммита. (НОВЫЙ КОММИТ НЕ СОЗДАЕТСЯ)
}
-git status - показывает статус нашей дерриктории 
-git log - показывает все commit, которые мы сделали
-git add. - добавить все файлы в текущей папке
-git add *.java - добавить все файлы в текущей папке с расширением .java
-git add someDir/*.java - добавить все файлы в папке someDir с раширением .java
-git add someDir/ - добавит все файлы в папке someDir 
-git add "*.java" - добавить все файлы в проект с расширением .java
{-git diff - показывает разницу между текущим "НЕОТСЛЕЖИВАЕМЫМ" состоянием репозитория и последнего снимка репозитория
-git diff --staged - показывает разницу между текущим "ОТСЛЕЖИВАЕМЫМ" состоянием репозитория и последнего снимка репозитория
-git diff (COMMIT_ID) - показывает разницу между текущим состоянием репозитория и указанным снимком репозитория (через хэш commit-а)
}
{-git reset - сбрасывает наш проект до необходмого commit-а
            +--soft - самый мягкий, переводит все commit-ы сделанные после указанного в статус "отслеживаемые"
            +--mixed - более грубый(ставится по дефолту), при откате к какому-то commit-у, переводит все commit-ы, сделанные ПОСЛЕ к "неотслеживаемому" состоянию.
            +--hard - самый радикальный(стираются все изменения и перезаписывается история), после указанного коммита
            +[commit]
}
-git clean (-n чтобы посмотреть, что будет удалено, -f чтобы удалить изменения) - удаляет "неотслеживаемые" изменения.
-git checkout - используется для перемещения между коммитами, версиями отдельных файлов и веток. Позволяет перейти с определенному коммиту, не удаляя коммиты, сделанные после, переводит HEAD в статус "отделённый", при этом, все изменения, сделанные в таком состоянии не будут сохранены и удалятся сборщиком мусора. Для возврата к последнему коммиту(git chechout master, где master - название ветки)
-git checkout <хэш коммита> --путь до файла1 путь до файла 2...
GITHUB{
-git remote -v - просмотр списка сущесвтующих удаленных репозиториев
-git remote add Название_репозитория адрес репозитория - добавить новый удаленный репозиторий, который находится по указанному адресу. Обращаться к кдаленному репозиторию на нашем пк мы будет по его имени.
-git remote remove Название_репозитория - удалить репозиторий с указанным названием.
-git push Название_репозитория название ветки - пушит наши файлы на удалённый репозитоий
-git pull Название_репозитория название ветки - пулит наши файлы с удалённого репозитория на наш пк

}
